/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javalibrary;

import java.util.*;

public class Library {
    public boolean numbAverage;

    public boolean someLibraryMethod() {
        return true;
    }

    public static int[] roll(int n) {
        int[] arrayRolls = new int[n];

        for (int i = 0; i < n; i++) {
            int dice = new Random().nextInt(5) + 1;
            arrayRolls[i] = dice;
        }
        return arrayRolls;
    }

    public static boolean containsDuplicates(int[] numbs) {
        for (int i = 0; i < numbs.length; i++) {
            for (int j = i + 1; j < numbs.length; j++) {
                if (numbs[i] == numbs[j]) {
                    return true;
                }
            }
        }
        return false;
    }
    public int numbAverage(int[] arr) {
        int sum = Arrays.stream(arr).sum();
        return (sum / arr.length);
    }

    public int[] matSearch(int[][] matrix){
        int avg = 0;
        int[] result = new int[0];

        for (int[] ints : matrix) {
            int sum = Arrays.stream(ints).sum();
            int newAvg = (sum / ints.length);

            if (newAvg < avg) {
                avg = newAvg;
                result = ints;
            }
        }
        return result;
    }

    public static void tempHash(int[][] matrix) {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        for (int i = 0; i < weeklyMonthTemperatures.length; i++) {


        }
    }

    public static String tally(ArrayList<String> args) {
        ArrayList<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");

        HashMap<String, ArrayList<String>> votesTotal = new HashMap<>();
        HashSet<String> totalPlant = new HashSet<>();

        // For ( iterate over every item )
        // If (item not there, add item to array)
        // else (if item there, add vote)

        votes.add("Tree");

        ArrayList<String>
    }


}
